{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Mac\\\\ReactProjects\\\\qling\\\\authentication\\\\auth.js\";\nimport React, { useState, useEffect, useContext, createContext } from 'react';\nimport nookies from 'nookies';\nimport firebaseClient from './firebaseClient';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nconst AuthContext = /*#__PURE__*/createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  firebaseClient;\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  useEffect(() => {\n    return firebase.auth().onIdTokenChanged(async user => {\n      if (!user) {\n        setUser(null);\n        nookies.set(undefined, 'token', '', {});\n        return;\n      }\n\n      const token = await user.getIdToken();\n      setUser(user);\n      nookies.set(undefined, 'token', token, {});\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\nexport const useAuth = () => useContext(AuthContext);","map":{"version":3,"sources":["C:/Mac/ReactProjects/qling/authentication/auth.js"],"names":["React","useState","useEffect","useContext","createContext","nookies","firebaseClient","firebase","AuthContext","AuthProvider","children","user","setUser","auth","onIdTokenChanged","set","undefined","token","getIdToken","useAuth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,aAAjD,QAAsE,OAAtE;AAEA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AAEA,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,EAAD,CAAjC;AAEA,OAAO,MAAMK,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC1CJ,EAAAA,cAAc;AACd,QAAM;AAAA,OAACK,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,WAAOK,QAAQ,CAACM,IAAT,GAAgBC,gBAAhB,CAAiC,MAAMH,IAAN,IAAe;AACrD,UAAG,CAACA,IAAJ,EAAS;AACPC,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAP,QAAAA,OAAO,CAACU,GAAR,CAAYC,SAAZ,EAAuB,OAAvB,EAAgC,EAAhC,EAAoC,EAApC;AACA;AACD;;AACD,YAAMC,KAAK,GAAG,MAAMN,IAAI,CAACO,UAAL,EAApB;AACAN,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAN,MAAAA,OAAO,CAACU,GAAR,CAAYC,SAAZ,EAAuB,OAAvB,EAAgCC,KAAhC,EAAuC,EAAvC;AACD,KATM,CAAP;AAUD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACN,MAAAA;AAAD,KAA7B;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBM;AAwBP,OAAO,MAAMS,OAAO,GAAG,MAAMhB,UAAU,CAACK,WAAD,CAAhC","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from 'react';\r\n\r\nimport nookies from 'nookies';\r\nimport firebaseClient from './firebaseClient';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst AuthContext = createContext({});\r\n\r\nexport const AuthProvider = ({children}) => {\r\n  firebaseClient;\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    return firebase.auth().onIdTokenChanged(async(user) => {\r\n      if(!user){\r\n        setUser(null);\r\n        nookies.set(undefined, 'token', '', {});\r\n        return\r\n      }\r\n      const token = await user.getIdToken();\r\n      setUser(user);\r\n      nookies.set(undefined, 'token', token, {});\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{user}}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = () => useContext(AuthContext)"]},"metadata":{},"sourceType":"module"}